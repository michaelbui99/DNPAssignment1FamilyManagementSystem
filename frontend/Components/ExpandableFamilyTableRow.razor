@using Models
@using DNPAssignment1FamilyManagementSystem.Data
@using DNPAssignment1FamilyManagementSystem.Models
@inject IFamilyService FamilyService
@namespace DNPAssignment1FamilyManagementSystem.Components
@if (Family != null)
{
    <AuthorizeView Policy="IsUser">
        <Authorized>
    <tr @onclick="@ExpandView">
    <td>
        <span class="@_iconClass"></span>
    </td>
    <td>@Family.StreetName</td>
    <td>@Family.HouseNumber</td>
    <td>@Family.Adults.Count Adults; @Family.Children.Count Children; @Family.Pets.Count Pets</td>
    <td>
        <button @onclick="() => { FamilyService.DeleteFamilyAsync(Family.StreetName, Family.HouseNumber); Family = null; StateHasChanged();}">
            <i class="fas fa-trash"></i>
        </button>
    </td>
</tr>
    @if (_isCollapsed == false)
    {
        @ChildContent
    }
        </Authorized>       
        <NotAuthorized>
             <tr @onclick="@ExpandView">
                <td>
                    <span class="@_iconClass"></span>
                </td>
                <td>@Family.StreetName</td>
                <td>@Family.HouseNumber</td>
                <td>@Family.Adults.Count Adults; @Family.Children.Count Children; @Family.Pets.Count Pets</td>
            </tr>
                @if (_isCollapsed == false)
                {
                    @ChildContent
                }
        </NotAuthorized>
    </AuthorizeView>
}

@code {
    private string _iconClass = "oi oi-collapse-down";
    private bool _isCollapsed = true;
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public Family Family { get; set; }

    private void ExpandView()
    {
        if (_isCollapsed)
        {
            _isCollapsed = false;
            _iconClass = "oi oi-collapse-up";
        }
        else
        {
            _isCollapsed = true;
            _iconClass = "oi oi-collapse-down"; 
        }
    }
}