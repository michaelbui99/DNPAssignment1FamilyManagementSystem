@using Models
@using DNPAssignment1FamilyManagementSystem.Data.Impl
@inject IEventCoordinator EventCoordinator


@if (Person != null)
{
    <AuthorizeView Policy="IsUser">
        <Authorized>
            <p>Name: @Person.FirstName @Person.LastName  <button @onclick="DeletePerson"><i class="fas fa-trash"></i></button></p>
            <p>Age: @Person.Age</p>
            <p>Sex: @Person.Sex</p>
            <p>Height: @Person.Height</p>
            <p>Weight: @Person.Weight</p>
            <p>EyeColor: @Person.EyeColor</p>
            <p>HairColor: @Person.HairColor</p>
        </Authorized>
        
        <NotAuthorized>
            <p>Name: @Person.FirstName @Person.LastName</p>
            <p>Age: @Person.Age</p>
            <p>Sex: @Person.Sex</p>
            <p>Height: @Person.Height</p>
            <p>Weight: @Person.Weight</p>
            <p>EyeColor: @Person.EyeColor</p>
            <p>HairColor: @Person.HairColor</p>
        </NotAuthorized>
    </AuthorizeView>
}

@code {

    [Parameter]
    public Person Person { get; set; }
    [Parameter]
    public Family Family { get; set; }

    [Parameter]
    public IDeleteStrategy DeleteStrategy { get; set; }

    private async void DeletePerson()
    {
        if (DeleteStrategy != null)
        {
            await DeleteStrategy.DeleteAsync(Person, Family);
            Person = null;
        
    /*
         *Fixes an issue where p-tags in Parent Component with Salary and Job
         * were not updated after the adult has been deleted. 
         */ 
            EventCoordinator.Notify();
        }
    }
}