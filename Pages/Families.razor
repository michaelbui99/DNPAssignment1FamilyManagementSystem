@page "/Families"
@using DNPAssignment1FamilyManagementSystem.Data
@using Models
@inject NavigationManager NavigationManager
@inject IFamilyService FamilyService
<AuthorizeView>
    <Authorized>
        <div class="families-container">
            <div class="families-container__header">
                <h3>Families</h3>
                    
                <div class="icon-wrapper">
                    <i class="fas fa-search"></i>
                </div>
                    <input type="text" placeholder="Search">
           
            </div>
                    @if (_families is null)
                    {
                        <p>
                            <em>Loading...</em>
                        </p>
                    }
                    else if (!_families.Any())
                    {
                        <p>
                            <em>No Families has been created yet.</em>
                        </p>
                    }
                    else
                    {
                        <table class="table">
                            <thead>
                            <tr>
                                <th></th>
                                <th>Street Name</th>
                                <th>House No</th>
                                <th>Member Count</th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var f in _families)
                            {
                                <CollapsableFamilyTableRow Family="f">
                                    <p>Hello</p>
                                </CollapsableFamilyTableRow>
                            }
                            </tbody>
                        </table>
                    }

        </div>
    </Authorized>
</AuthorizeView>

@code {
    private IList<Family> _families;

    [CascadingParameter]
    protected Task<AuthenticationState> AuthStat { get; set; }


    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        var user = (await AuthStat).User;
        if (!user.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/Login");
        }
        else
        {
            _families = FamilyService.GetFamilies();
        }
    }

}